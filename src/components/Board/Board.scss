@use "../../styles/globals.scss" as g;


.board, .board-row, .board-square {
  font-family: g.$mono-font;
}

.board {
  flex-direction: column;
  display: flex;
  justify-content: space-between;
  width: fit-content;
}

.board-row {
  align-items: center;
  display: flex;
  justify-content: space-around;
  height: 100%;
  width: 100%;
}

.board-square {
  align-items: center;
  aspect-ratio: 1/1;
  display: flex;
  justify-content: center;
  transform: scale(1.0);
  transition: g.$ui-fast-transition transform;
  width: 100%;

  &:hover {
    transform: scale(1.25);
    z-index: 100;
  }
}

.board-square-rect {  
  &:hover {
    // this doesn't actually look good
    // cursor: crosshair;
    stroke: g.$board-square-hover-color !important;
  }
}

// ============================
// REDESIGNED BOARD SQUARE WORK
// ============================
.redesigned-board-square {
  align-items: center;
  aspect-ratio: 1/1;
  background-color: g.$board-square-empty-color;
  // border: g.$board-square-border-width solid g.$board-square-border-color;
  border-bottom: g.$board-square-border-width solid g.$board-square-border-color;
  border-right: g.$board-square-border-width solid g.$board-square-border-color;
  // border: 2px solid red;
  display: flex;
  height: g.$board-square-size;
  justify-content: center;
  transform: scale(1.0);
  transition: 
    g.$ui-fast-transition transform,
    g.$ui-fast-transition background-color;
  // width: 100%;
  width: g.$board-square-size;

  &:hover {
    background-color: g.$board-square-hover-color;
    transform: scale(1.25);
    z-index: 100;
  }

  &.x {
    // "x" state (right click)
    // background-color: red;
  }

  &.x::before, &.x::after {
    // pseudo-elements for the x
    background-color: g.$board-square-x-color;
    // border-radius: 0px;
    border-radius: g.$board-square-size;
    content: '';
    height: g.$board-square-size;
    left: 50%;
    position: absolute;
    top: 50%;
    transition: background-color g.$ui-fast-transition;
    transform-origin: center;
    width: g.$board-square-x-width; // TODO: replace with a variable
  }

  &.x::before {
    transform: translate(-50%, -50%) rotate(45deg);
  }
  
  &.x::after {
    transform: translate(-50%, -50%) rotate(-45deg);
  } 

  &.filled {
    // filled state (left click)
    background-color: g.$board-square-fill-color;
  }

  &.completed {
    transition: g.$board-reveal-transition background-color;
  }

  &::before, &::after {

  }
}

// ColumnNumber and RowNumber related rules
.board-row-and-board-wrapper {
  display: flex;
  flex-direction: row;
}

.board-column-numbers {
  justify-content: flex-end;
  // background-color: red;
  display: flex;
}

.board-row-numbers {
  // background-color: blue;
}

.board-number-container {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;

  .board-row-numbers & {
    flex-direction: row;
  }
}

.board-number {
  // background-color: g.$board-number-background-color;
  // border-radius: g.$common-border-radius;
  display: flex;
  font-weight: bold;
  justify-content: center;
  opacity: 1;
  transition: opacity g.$board-reveal-transition;

  .solved & {
    opacity: 0;
  }
}